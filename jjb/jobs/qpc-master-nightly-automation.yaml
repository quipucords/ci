- job:
    name: 'qpc-master-nightly-automation'
    node: 'f28-os'
    triggers:
        - timed: '@midnight'
    properties:
      - build-blocker:
          blocking-jobs:
            - 'qpc-.*nightly-automation'
          queue-scanning: 'BUILDABLE'
    scm:
        - git:
            url: https://github.com/quipucords/camayoc.git
            basedir: camayoc
            branches:
                - '*/master'
            skip-tag: true
        - git:
            url: https://github.com/quipucords/ci.git
            basedir: ci
            branches:
                - '*/master'
            skip-tag: true
    wrappers:
        - credentials-binding:
            - file:
                credential-id: 4c692211-c5e1-4354-8e1b-b9d0276c29d9
                variable: ID_JENKINS_RSA
            - file:
                credential-id: 50dc19ce-555f-422c-af38-3b5ede422bb4
                variable: ID_JENKINS_RSA_PUB
        - ssh-agent-credentials:
            users:
                - '390bdc1f-73c6-457e-81de-9e794478e0e'
    builders:
        - copyartifact:
            project: qpc_docker_img_poll
            filter: quipucords.1.0.0.tar.gz
            target: ${WORKSPACE}
            stable: true

        - config-file-provider:
            files:
              - file-id: '62cf0ccc-220e-4177-9eab-f39701bff8d7'
                target: 'camayoc/config.yaml'
        - shell: |
            sudo dnf -y install ansible

            cat > jenkins-slave-hosts <<EOF
            [jenkins-slave]
            ${OPENSTACK_PUBLIC_IP}

            [jenkins-slave:vars]
            ansible_user=jenkins
            ansible_ssh_extra_args=-o StrictHostKeyChecking=no
            ssh_public_key_file=$(cat ${ID_JENKINS_RSA_PUB})
            EOF

            ansible-playbook -b -i jenkins-slave-hosts ci/ansible/sonar-setup-scan-users.yaml

        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-3.6
            nature: shell
            command: |
                export XDG_CONFIG_HOME=$PWD
                mkdir -p /home/jenkins/.ssh
                cp "${ID_JENKINS_RSA}" /home/jenkins/.ssh/id_rsa
                chmod 0600 /home/jenkins/.ssh/id_rsa

                sed -i "s/{jenkins_slave_ip}/${OPENSTACK_PUBLIC_IP}/" camayoc/config.yaml

                echo "OPTIONS=--log-driver=journald" > docker.conf
                echo "DOCKER_CERT_PATH=/etc/docker" >> docker.conf
                echo "INSECURE_REGISTRY=\"--insecure-registry ${DOCKER_REGISTRY}\"" >> docker.conf
                sudo cp docker.conf /etc/sysconfig/docker
                sudo systemctl start docker
                sudo docker load -i ${WORKSPACE}/quipucords*.tar.gz
                # make log dir to save server logs
                mkdir ${WORKSPACE}/log
                # run container binding local ssh keys and log dir to the container
                sudo docker run -d -p "443:443" -v /tmp:/tmp -v /home/jenkins/.ssh:/home/jenkins/.ssh -v ${WORKSPACE}/log:/var/log -i "quipucords:1.0.0"

                # get docker container for selenium, standalone chrome
                sudo docker run --net="host" -d -p 4444:4444 -v /dev/shm:/dev/shm:z -v /tmp:/tmp:z selenium/standalone-chrome-debug:3.14.0-arsenic

                sudo wget -O /etc/yum.repos.d/chambridge-qpc-fedora-27.repo https://copr.fedorainfracloud.org/coprs/chambridge/qpc/repo/fedora-27/chambridge-qpc-fedora-27.repo
                sudo dnf -y install qpc

                # create pytest configuration file to ignore the insecure
                # requests warnings that talking to the server over https
                # without a good cert cause
                cat >> pytest.ini << EOF
                [pytest]
                filterwarnings = ignore::urllib3.exceptions.InsecureRequestWarning
                EOF

                # Install camayoc and run test suite
                pip install ./camayoc[dev]

                set +e
                export SELENIUM_DRIVER=chrome
                py.test -c pytest.ini -vvv -ra --junit-xml ${WORKSPACE}/junit.xml camayoc/camayoc/tests/qpc/
                # Kill chrome container and run firefox tests
                sudo docker rm $(sudo docker stop $(sudo docker ps -a -q  --filter ancestor="selenium/standalone-chrome-debug:3.14.0-arsenic"))

                export SELENIUM_DRIVER=firefox
                sudo docker run --net="host" -d -p 4444:4444 -v /dev/shm:/dev/shm:z -v /tmp:/tmp:z selenium/standalone-firefox-debug:3.14.0-arsenic
                py.test -c pytest.ini -vvv -ra --junit-xml ${WORKSPACE}/firefox-ui-junit.xml camayoc/camayoc/tests/qpc/ui
                set -e

                # Archive server logs to aid in analyzing test failures
                cd ${WORKSPACE}
                tar -cvzf server-logs.tar.gz ${WORKSPACE}/log

    publishers:
        - junit:
            results: '*junit.xml'
        - archive:
            artifacts: 'server-logs.tar.gz'
            allow-empty: false
        - mark-node-offline
